"use strict";(self.webpackChunkqho_640_contemporary_web_application=self.webpackChunkqho_640_contemporary_web_application||[]).push([[7533],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(t),d=r,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return t?a.createElement(f,o(o({ref:n},s),{},{components:t})):a.createElement(f,o({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[m]="string"==typeof e?e:r,o[1]=p;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3541:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_position:1},o="Topic-01: map() Function",p={unversionedId:"Week-03/Topic-01 map() function",id:"Week-03/Topic-01 map() function",title:"Topic-01: map() Function",description:"In JavaScript and React, the .map() method is used to iterate over an array and perform an operation on each item in the array. It creates a new array by calling a function on each element in the original array. This method is commonly used for transforming data or rendering lists of elements in React components.",source:"@site/QHO640_CWA_S1_2023/Week-03/Topic-01 map() function.md",sourceDirName:"Week-03",slug:"/Week-03/Topic-01 map() function",permalink:"/QHO640-Contemporary-Web-Application-Notes/QHO640_CWA_S1_2023/Week-03/Topic-01 map() function",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Week-03",permalink:"/QHO640-Contemporary-Web-Application-Notes/QHO640_CWA_S1_2023/category/week-03"},next:{title:"Topic-02: Props",permalink:"/QHO640-Contemporary-Web-Application-Notes/QHO640_CWA_S1_2023/Week-03/Topic-02 Props"}},l={},c=[{value:".map() in JavaScript:",id:"map-in-javascript",level:3},{value:"Example in JavaScript:",id:"example-in-javascript",level:4},{value:".map() in React:",id:"map-in-react",level:3},{value:"Example in React:",id:"example-in-react",level:4},{value:"Key Points:",id:"key-points",level:3}],s={toc:c},m="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"topic-01-map-function"},"Topic-01: map() Function"),(0,r.kt)("h1",{id:"map-function"},"map() Function"),(0,r.kt)("p",null,"In JavaScript and React, the ",(0,r.kt)("inlineCode",{parentName:"p"},".map()")," method is used to iterate over an array and perform an operation on each item in the array. It creates a new array by calling a function on each element in the original array. This method is commonly used for transforming data or rendering lists of elements in React components."),(0,r.kt)("h3",{id:"map-in-javascript"},".map() in JavaScript:"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".map()")," function takes a callback function as an argument and applies that function to each element in the array. It returns a new array containing the results of the provided function applied to each element."),(0,r.kt)("h4",{id:"example-in-javascript"},"Example in JavaScript:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const numbers = [1, 2, 3, 4, 5];\n\nconst doubledNumbers = numbers.map((number) => number * 2);\n\nconsole.log(doubledNumbers); // Output: [2, 4, 6, 8, 10]\n")),(0,r.kt)("p",null,"In this example, the ",(0,r.kt)("inlineCode",{parentName:"p"},".map()")," function doubles each number in the ",(0,r.kt)("inlineCode",{parentName:"p"},"numbers")," array, creating a new array ",(0,r.kt)("inlineCode",{parentName:"p"},"doubledNumbers"),"."),(0,r.kt)("h3",{id:"map-in-react"},".map() in React:"),(0,r.kt)("p",null,"In React, the ",(0,r.kt)("inlineCode",{parentName:"p"},".map()")," method is commonly used to render dynamic lists or arrays of elements in the JSX."),(0,r.kt)("h4",{id:"example-in-react"},"Example in React:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import React from 'react';\n\nfunction ListComponent() {\n  const names = ['Alice', 'Bob', 'Charlie', 'David'];\n\n  return (\n    <ul>\n      {names.map((name, index) => (\n        <li key={index}>{name}</li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListComponent;\n")),(0,r.kt)("p",null,"In this React example, the ",(0,r.kt)("inlineCode",{parentName:"p"},".map()")," function is used to create a list of ",(0,r.kt)("inlineCode",{parentName:"p"},"<li>")," elements for each name in the ",(0,r.kt)("inlineCode",{parentName:"p"},"names")," array. It's important to provide a unique ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," prop to each rendered element when using ",(0,r.kt)("inlineCode",{parentName:"p"},".map()")," to help React efficiently update the UI when the list changes."),(0,r.kt)("h3",{id:"key-points"},"Key Points:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".map()")," is a method used to iterate over arrays in JavaScript."),(0,r.kt)("li",{parentName:"ul"},"In plain JavaScript, it transforms each element of an array based on the provided callback function and returns a new array."),(0,r.kt)("li",{parentName:"ul"},"In React, ",(0,r.kt)("inlineCode",{parentName:"li"},".map()")," is often used in JSX to dynamically render lists or arrays of elements, like rendering a list of components or elements based on an array.")),(0,r.kt)("p",null,"Using ",(0,r.kt)("inlineCode",{parentName:"p"},".map()")," is a convenient way to process and transform arrays, and it's especially valuable in React for rendering dynamic content, such as lists or repeated components based on data stored in arrays."))}u.isMDXComponent=!0}}]);